name: New version check

on:
  # enabling manual trigger
  workflow_dispatch:
  # running every hour
  schedule:
    - cron: '48 * * * *'

jobs:
  check:
    # do not run in forks
    if: github.repository == 'istiak101/chromium-build-system'
    runs-on: ubuntu-latest
    steps:
      - name: Set maintainer groups
        id: maintainers
        run: |
          echo "all=@istiak101" >> $GITHUB_OUTPUT
          echo "linux=@istiak101" >> $GITHUB_OUTPUT
          echo "windows=@istiak101" >> $GITHUB_OUTPUT
          echo "macos=@istiak101" >> $GITHUB_OUTPUT
          echo "android=@istiak101" >> $GITHUB_OUTPUT
      - name: Get the latest Chromium version
        id: latest-version
        run: |
          set -e
          echo "linux_version=$( curl -s 'https://versionhistory.googleapis.com/v1/chrome/platforms/linux/channels/stable/versions/all/releases?filter=endtime=none,fraction>=0.5&order_by=version%20desc'  | jq -re '.releases | first | .version' )" >> $GITHUB_OUTPUT
          echo "win_version=$( curl -s 'https://versionhistory.googleapis.com/v1/chrome/platforms/win/channels/stable/versions/all/releases?filter=endtime=none,fraction>=0.5&order_by=version%20desc'  | jq -re '.releases | first | .version' )" >> $GITHUB_OUTPUT
          echo "mac_version=$( curl -s 'https://versionhistory.googleapis.com/v1/chrome/platforms/mac/channels/stable/versions/all/releases?filter=endtime=none,fraction>=0.5&order_by=version%20desc'  | jq -re '.releases | first | .version' )" >> $GITHUB_OUTPUT
          echo "android_version=$( curl -s 'https://versionhistory.googleapis.com/v1/chrome/platforms/android/channels/stable/versions/all/releases?filter=endtime=none,fraction>=0.5&order_by=version%20desc'  | jq -re '.releases | first | .version' )" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: Create Issue for all platforms
        if: |
          contains( steps.latest-version.outputs.win_version, steps.latest-version.outputs.mac_version ) &&
          contains( steps.latest-version.outputs.mac_version, steps.latest-version.outputs.linux_version )   
        uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.latest-version.outputs.linux_version }}
          PLATFORM: all platforms
          NOTIFY_MAINTAINERS: "${{ steps.maintainers.outputs.all }} ${{ steps.maintainers.outputs.linux }} ${{ steps.maintainers.outputs.windows }} ${{ steps.maintainers.outputs.macos }} ${{ steps.maintainers.outputs.android }}"
        with:
          update_existing: false
          search_existing: all
          filename:  .github/ISSUE_TEMPLATE/create-an--updating-to-chromium-x-x-x-x-.md
      - name: Create Issue for Linux
        if: |
          ! contains( steps.latest-version.outputs.win_version, steps.latest-version.outputs.mac_version ) ||
          ! contains( steps.latest-version.outputs.mac_version, steps.latest-version.outputs.linux_version )
        uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.latest-version.outputs.linux_version }}
          PLATFORM: Linux
          NOTIFY_MAINTAINERS: "${{ steps.maintainers.outputs.all }} ${{ steps.maintainers.outputs.linux }}"
        with:
          update_existing: false
          search_existing: all
          filename:  .github/ISSUE_TEMPLATE/create-an--updating-to-chromium-x-x-x-x-.md
      - name: Create Issue for macOS
        if: |
          ! contains( steps.latest-version.outputs.win_version, steps.latest-version.outputs.mac_version ) ||
          ! contains( steps.latest-version.outputs.mac_version, steps.latest-version.outputs.linux_version )
        uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.latest-version.outputs.mac_version }}
          PLATFORM: macOS
          NOTIFY_MAINTAINERS: "${{ steps.maintainers.outputs.all }} ${{ steps.maintainers.outputs.macos }}"
        with:
          update_existing: false
          search_existing: all
          filename:  .github/ISSUE_TEMPLATE/create-an--updating-to-chromium-x-x-x-x-.md
      - name: Create Issue for Windows
        if: |
          ! contains( steps.latest-version.outputs.win_version, steps.latest-version.outputs.mac_version ) ||
          ! contains( steps.latest-version.outputs.mac_version, steps.latest-version.outputs.linux_version )
        uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.latest-version.outputs.win_version }}
          PLATFORM: Windows
          NOTIFY_MAINTAINERS: "${{ steps.maintainers.outputs.all }} ${{ steps.maintainers.outputs.windows }}"
        with:
          update_existing: false
          search_existing: all
          filename:  .github/ISSUE_TEMPLATE/create-an--updating-to-chromium-x-x-x-x-.md
      - name: Create Issue for Android
        if: |
          ! contains( steps.latest-version.outputs.win_version, steps.latest-version.outputs.mac_version ) ||
          ! contains( steps.latest-version.outputs.mac_version, steps.latest-version.outputs.linux_version )
        uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.latest-version.outputs.android_version }}
          PLATFORM: Android
          NOTIFY_MAINTAINERS: "${{ steps.maintainers.outputs.all }} ${{ steps.maintainers.outputs.android }}"
        with:
          update_existing: false
          search_existing: all
          filename:  .github/ISSUE_TEMPLATE/create-an--updating-to-chromium-x-x-x-x-.md
